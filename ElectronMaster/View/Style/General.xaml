<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:electronMaster="clr-namespace:ElectronMaster"
                    xmlns:controls="clr-namespace:ElectronMaster.Controls"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:converters="clr-namespace:ElectronMaster.Converters"
                    mc:Ignorable="d">

    <Color x:Key="RedAccent">#FFE44424</Color>
    <Color x:Key="BlueAccent">#FF67BCDB</Color>
    <Color x:Key="GreenAccent">#FFA2AB58</Color>
    <Color x:Key="BlackAccent">#252526</Color>

    <SolidColorBrush x:Key="RedAccentBrush" Color="{StaticResource RedAccent}"/>
    <SolidColorBrush x:Key="BlueAccentBrush" Color="{StaticResource BlueAccent}"/>
    <SolidColorBrush x:Key="GreenAccentBrush" Color="{StaticResource GreenAccent}"/>
    <SolidColorBrush x:Key="BlackAccentBrush" Color="{StaticResource BlackAccent}"/>

    <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                         Color="#336699" />
            <!-- Background of selected item when not focussed -->
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                         Color="#336699" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="LightBlue"/>
        </Style.Resources>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>

    <!--Úprava vzhledů tab itemů: každý je široký jako třetina apliakce-->
    <converters:SizeConverter x:Key="SizeConverter"/>
    <converters:NullVisibilityConverter x:Key="NullVisibilityConverter"/>
    <converters:ElementTypeToColorConverter x:Key="ElementTypeToColorConverter"/>
    <converters:BoolOpacityConverter x:Key="BoolOpacityConverter"/>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <Style TargetType="{x:Type TabItem}">
        <!--Úprava šířky-->
        <Setter Property="Width" Value="{Binding ElementName=MainGrid, Path=ActualWidth, Converter={StaticResource SizeConverter}}"/>
        <Setter Property="Background" Value="{StaticResource BlackAccentBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="15"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="#222222"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#222222"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="#FF303438"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="TextTrimming" Value="None"/>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="#FF303438"/>
    </Style>

    <Style TargetType="{x:Type RichTextBox}">
        <Setter Property="Foreground" Value="#FF303438"/>
    </Style>

    <Style x:Key="nadpis" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="#42546C"/>
        <Setter Property="Margin" Value="2"/>
    </Style>

    <Style x:Key="odstavec" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <ImageBrush x:Key="Button.MouseOver.Background" ImageSource="../../Images/floppy-disk-blue.png"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="FlatWhiteButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Controls -->
    <Style TargetType="{x:Type controls:ElementContainer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ElementContainer}">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="ZnackaPozadi" Grid.RowSpan="3" Fill="{Binding Element.ElementType, Converter={StaticResource ElementTypeToColorConverter},
                            RelativeSource={RelativeSource FindAncestor, 
                                AncestorType={x:Type controls:ElementContainer}}}"/>
                        <TextBlock x:Name="NazevCesky" Grid.Column="1" FontSize="14" Text="{Binding Element.CzechName,
                            RelativeSource={RelativeSource FindAncestor, 
                                AncestorType={x:Type controls:ElementContainer}}}" Margin="5,0,0,0" ToolTip="Název prvku česky"/>
                        <TextBlock x:Name="TypPrvkuTb" Grid.Column="1" Grid.Row="1" FontSize="14" Text="{Binding Element.ElementType,
                            RelativeSource={RelativeSource FindAncestor, 
                                AncestorType={x:Type controls:ElementContainer}}}" Margin="5,0,0,0"/>
                        <TextBlock x:Name="PocetElektronu"  Grid.Column="1" Grid.Row="2" FontSize="14" Text="{Binding Element.Electrons,
                            RelativeSource={RelativeSource FindAncestor, 
                                AncestorType={x:Type controls:ElementContainer}}}" Margin="5,0,0,0" ToolTip="Počet elektronů"/>

                        <TextBlock x:Name="Znacka" Grid.RowSpan="2" FontSize="40" Text="{Binding Element.Symbol,
                            RelativeSource={RelativeSource FindAncestor, 
                                AncestorType={x:Type controls:ElementContainer}}}" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock x:Name="NazevLatinsky" Grid.Row="2" FontSize="14" Text="{Binding Element.LatinName,
                            RelativeSource={RelativeSource FindAncestor, 
                                AncestorType={x:Type controls:ElementContainer}}}" Foreground="White" HorizontalAlignment="Center"/>
                        
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:ElementContainer}" x:Key="FrameStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ElementContainer}">
                    <Grid HorizontalAlignment="Stretch" ToolTip="{Binding Element.CzechName,
                            RelativeSource={RelativeSource FindAncestor, 
                                AncestorType={x:Type controls:ElementContainer}}}">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Rectangle Grid.RowSpan="3" Fill="{Binding Element.ElementType, Converter={StaticResource ElementTypeToColorConverter},
                            RelativeSource={RelativeSource FindAncestor, 
                                AncestorType={x:Type controls:ElementContainer}}}"/>

                        <TextBlock Grid.Row="2" Text="{Binding Element.CzechName,
                            RelativeSource={RelativeSource FindAncestor, 
                                AncestorType={x:Type controls:ElementContainer}}}" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" TextTrimming="CharacterEllipsis"/>
                        <TextBlock Grid.Row="1" Text="{Binding Element.Symbol,
                            RelativeSource={RelativeSource FindAncestor, 
                                AncestorType={x:Type controls:ElementContainer}}}" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <TextBlock Text="{Binding Element.Electrons,
                            RelativeSource={RelativeSource FindAncestor, 
                                AncestorType={x:Type controls:ElementContainer}}}" Foreground="White" HorizontalAlignment="Right" VerticalAlignment="Top" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:ElementInfoView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ElementInfoView}">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <ItemsControl ItemsSource="{Binding ElementInfo.Sections,
                                RelativeSource={RelativeSource FindAncestor, 
                                AncestorType={x:Type controls:ElementInfoView}}}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical" Margin="5">
                                        <TextBlock Text="{Binding Title}" FontSize="18"/>
                                        <Image Source="{Binding Image.Src}" 
                                               HorizontalAlignment="Left"
                                               Width="{Binding Image.Width}" Height="{Binding Image.Height}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:TimeLineNode}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TimeLineNode}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <Ellipse
                                Fill="{Binding Elements[0].ElementType,
                                Converter={StaticResource ElementTypeToColorConverter},
                                RelativeSource={RelativeSource FindAncestor, 
                                AncestorType={x:Type controls:TimeLineNode}}}"
                                     StrokeThickness="{Binding Elements.Count,
                                RelativeSource={RelativeSource FindAncestor, 
                                AncestorType={x:Type controls:TimeLineNode}}}"
                                     Width="50" Height="50"
                                     VerticalAlignment="Center"/>
                        </StackPanel>
                        <TextBlock Grid.Column="1" Text="{Binding DiscoveredText,
                                RelativeSource={RelativeSource FindAncestor, 
                                AncestorType={x:Type controls:TimeLineNode}}}"
                                   Margin="5,0,0,0"
                                   VerticalAlignment="Center"/>
                        <ItemsControl  Grid.Column="2" VerticalAlignment="Center"
                                       Margin="5,0,0,0"
                                      ItemsSource="{Binding Elements,
                                RelativeSource={RelativeSource FindAncestor, 
                                AncestorType={x:Type controls:TimeLineNode}}}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <controls:ElementContainer Element="{Binding}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>